import pandas as pd
from tqdm import tqdm

# Lista de CNAEs a serem filtrados
lista_cnae = [
    "1063500","1031700","1063500","1032501","9430800","0119999","0139399","0220903",
    "0133401","0220904","0116499","0159801","1095300","0119906","0161099","0322101",
    "1053800","1122401","0230600","3299006","1069400","3291400","1081302","0121101",
    "1113502","1340501","2013401","3250705","2121101","0133499","1414200","1099699",
    "1033301","1064300","2219600","1099605","1122499","2123800","2063100","1539400",
    "0220999","0139306","9499500","0135100","0119905","1629302","3212400","1629301",
    "0122900","0322107","1041400","0134200","0133402","2122000","1111901","1033302",
    "0112199","1111902","0163600","1093702","1093701","1094500","1521100","0322104",
    "1092900","0142300","1122403","0111301","1932200","1065101","1931400","1112700",
    "1081301","1352900","0133403","0133404","0141501","1359600","1412603","1020101",
    "1042200","1322700","1071600","4722902","0220905","1340599","2062200","1312000",
    "0133406","0131800","1099604","1351100","1066000","1032599","2029100","1422300",
    "1020102","2121103","1052000","1062700","1082100","1099607","0119901","0139305",
    "0210106","8610101","1099601","1061901","0111399","1043100","1354500","2330303",
    "1091102","0119902","2013402","1096100","1099602","1099603","5611203","0133409",
    "0155505","1353700","1540800","0141502","1091101","2110600","0210199","2012600",
    "1510600","0119908","2121102","0133405","0220906","0112102","0210102","0139303",
    "1330800","1072401","1311100","0312403","0210104","0139304","1412601","0321301",
    "1122402","3101200","1529700","2330399","0321304","0162899","1113501","1220499",
    "1710900","1731100","0312401","1323500","1623400","1411801"
]

def filtrar_linhas(input_csv, output_csv, cnae_lista, chunksize=100000):
    with open(output_csv, 'w', encoding='utf-8', newline='') as f_out:
        primeiro_chunk = True
        
        for chunk in tqdm(pd.read_csv(
            input_csv,
            encoding='utf-8',
            sep=';',
            header=None,
            dtype={11: str},  # Forçar coluna 11 como string
            low_memory=False,
            chunksize=chunksize
        ), desc="Processando chunks"):
            
            # Limpar espaços e garantir formato
            chunk[11] = chunk[11].str.strip()

            # Aplicar filtro
            mask = chunk[11].isin(cnae_lista)
            chunk_filtrado = chunk[mask]

            if not chunk_filtrado.empty:
                chunk_filtrado.to_csv(f_out, index=False, header=primeiro_chunk,
                                      sep=';', encoding='utf-8', mode='a')
                primeiro_chunk = False

    print(f"Linhas filtradas salvas em {output_csv}")


# Parâmetros
input_csv = 'estab_merged.csv'
output_csv = 'estab_cnae.csv'

# Executar
filtrar_linhas(input_csv, output_csv, lista_cnae, chunksize=100000)







